/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

#include "RooDsigmadm.h" 
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 

ClassImp(RooDsigmadm) 

 RooDsigmadm::RooDsigmadm(const char *name, const char *title, 
                        RooAbsReal& _x,
                        RooAbsReal& _p1,
                        RooAbsReal& _p2,
                        RooAbsReal& _p3) :
   RooAbsPdf(name,title), 
   x("x","x",this,_x),
   p1("p1","p1",this,_p1),
   p2("p2","p2",this,_p2),
   p3("p3","p3",this,_p3)
 { 
 } 


 RooDsigmadm::RooDsigmadm(const RooDsigmadm& other, const char* name) :  
   RooAbsPdf(other,name), 
   x("x",this,other.x),
   p1("p1",this,other.p1),
   p2("p2",this,other.p2),
   p3("p3",this,other.p3)
 { 
 } 



 Double_t RooDsigmadm::evaluate() const 
 { 
   // ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE 

//   Double_t s = 7000.;
//   Double_t mm = x/s;
//   Double_t power = p2+p3*TMath::Log(mm);
//   Double_t num = TMath::Power(1-mm, p1);
//   Double_t den = TMath::Power(mm,power);
//   Double_t func = num/den;
//   return func;
   
   //return TMath::Power(1-x/8000.,1.17636)/TMath::Power(x/8000.,p2+p3*TMath::Log(x/8000.)) ; 
   return 1./TMath::Power(x/8000.+p1, p2);
 } 



